/*
 * ShowClassificationRules.java
 *
 * Created on 15 de enero de 2007, 16:38
 */

package gui.Icons.Tree;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Collections;
import java.util.LinkedList;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author  and
 */
public class ShowClassificationRules extends javax.swing.JFrame {
    LinkedList rules;
    /** Creates new form ShowClassificationRules */
    public ShowClassificationRules() {
        initComponents();
    }
    
    public ShowClassificationRules(LinkedList rules) {
        initComponents();
        this.rules = rules;
        TreeTableModel model = new TreeTableModel(rules);
        tblRules.setModel(model);
        tblRules.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        this.addJTableHeaderListener();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRules = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        tblRules.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRules);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void addJTableHeaderListener() {
        MouseAdapter mouseListener = new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                TableColumnModel columnModel = tblRules.getColumnModel();
                int viewColumn = columnModel.getColumnIndexAtX(e.getX());
                int column = tblRules.convertColumnIndexToModel(viewColumn);
                if(e.getClickCount() == 1 && column != -1) {
                    if(column == 2) {
                        Collections.sort(rules, new compareClass());
                        TreeTableModel ttm = new TreeTableModel(rules);
                        tblRules.setModel(ttm);
                    } else if(column == 3) {
                        Collections.sort(rules, new compareConfidence());
                        Collections.sort(rules, new compareFrecuence());
                        TreeTableModel ttm = new TreeTableModel(rules);
                        tblRules.setModel(ttm);
                    }
                }
            }
        };
        JTableHeader header = tblRules.getTableHeader();
        header.addMouseListener(mouseListener);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowClassificationRules().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRules;
    // End of variables declaration//GEN-END:variables
}
