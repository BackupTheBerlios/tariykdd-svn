# Sample ResourceBundle properties file

Close_Help...=Close Help...

p08=When acceding to the configuration option, on the work area \nappears a contextual menu, which is divided in two parts \:\none for parameters of Pruning and another one for stablish a training set. \n\nIn pruning, the analyst has the possibility of configuring a minimum \nof registries per node and also should provide a threshold that \nis going to make stop the pruning of a certain node. \n\nThe analyst also should configure the size of the training set. \n\nAll parameters are in percentage terms. \nof the algorithm. \n\n\nThe execution of all the algorithms for classification is similar, \nacceding to the Run option by the contextual menu.

Algorithm_Mate=Algorithm Mate

p07=When executing the algorithm, its icon is changed by an animation, \nas it is in B, which indicates that the process is \nin execution. \n\nthe run time, is proportional to the size of the dat base \nand to the number and type of processes that this algorithm involves. \n 

p06=When releasing the icon in the work area A. is possible to connect the icons \nby means of a thread. \n\nWhen doing click straight on the icon appears an emergent menu, \nwhich consists of the following options \:\n\nthe Delete option, deletes the algorithm icon from the work area. \n\nthe Configure option, adapts the parameters of the algorithm to the necessities \nof the analyst \n\nand the Run option executes the algorithm. \n\n\nthe association algorithms configuration is similar in all of them \nand it gets done as follows\:

p05=Mate is an algorithm for classification. The Classification of data is a two steps process \:\nFirst, a model is built based in a data set denominated training set. \nIn the training set, each tupla is assumed that \nbelongs to a predefined class, determined by a \nclass attribute. \nSo, classification is supervized learning \nthe rest of attributes are denominate attributes condition. \nSecond, the model is test with another \ndata set denominated test set.\n\nMate. The operator Mate generates, for every tupla from \na relation, all the possible combinations formed by \nthe non null values of the beloging attributes  of a list \nof denominated attributes Condition, and the non null value \nof the class attribute. \n\nMate take as input each tupla of R and produces a new \nrelation whose scheme is formed by the attributes condition, \na list of attributes condition and the class attribute, the class attribute with \ntuplas formed by all the possible combinations of each \none of the attributes condition with the class attribute, remaining \nvalues of the attributes become null. \n\n Mate matches in each partition all the attributes condition \nwith the class attribute, which facilitates the count and the later calculation of \nthe measures of entropy and the gain of information. \nMate operator generates these combinations, in a single sweeping\n over the training table \(which affects the efficiency in the decision tree \nbuliding process \).\n\nAccuracy of the model is calculate according to the percentage of \ntest examples that are correctly classified. \n\n\nConnection with other drag and drop components is similar \nin every single algorithm, and it gets done as shown below. 

p04=When acceding to the configuration option, on the work area \nappears a contextual menu, which is divided in two parts \:\none for parameters of Pruning and another one for stablish a training set. \n\nIn pruning, the analyst has the possibility of configuring a minimum \nof registries per node and also should provide a threshold that \nis going to make stop the pruning of a certain node. \n\nThe analyst also should configure the size of the training set. \n\nAll parameters are in percentage terms. \nof the algorithm. \n\n\nThe execution of all the algorithms for classification is similar, \nacceding to the Run option by the contextual menu.

Algorithm_C4-5=Algorithm C4-5

p03=When executing the algorithm, its icon is changed by an animation, \nas it is in B, which indicates that the process is \nin execution. \n\nthe run time, is proportional to the size of the dat base \nand to the number and type of processes that this algorithm involves. \n 

p02=When releasing the icon in the work area A. is possible to connect the icons \nby means of a thread. \n\nWhen doing click straight on the icon appears an emergent menu, \nwhich consists of the following options \:\n\nthe Delete option, deletes the algorithm icon from the work area. \n\nthe Configure option, adapts the parameters of the algorithm to the necessities \nof the analyst \n\nand the Run option executes the algorithm. \n\n\nthe association algorithms configuration is similar in all of them \nand it gets done as follows\:

p01=C45 is an algorithm for classification. The Classification of data is a two steps process \:\nFirst, a model is built based in a data set denominated training set. \nIn the training set, each tupla is assumed that \nbelongs to a predefined class, determined by a \nclass attribute. \nSo, classification is supervized learning \nthe rest of attributes are denominate attributes condition. \nSecond, the model is test with another \ndata set denominated test set. \n\nC45 builds the tree from above downwards recursivelly \nusing the policy divide and conquer. \nThe algorithm uses a metric based in entropy, well-known \nlike information gaining for tree building. \n\nAccuracy of the model is calculate according to the percentage of \ntest examples that are correctly classified. \n\n\nConnection with other drag and drop components is similar \nin every single algorithm, and it gets done as shown below. 



Return_Aplication=Return Aplication
